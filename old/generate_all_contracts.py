"""
–ú–∞—Å—Ç–µ—Ä-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ 1–°.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–æ—Ä–º —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é
–≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python generate_all_contracts.py --report-path "conf_reports/FullReport.txt" --conf-dir "conf_files"

–û–ø—Ü–∏–∏:
--skip-metadata    - –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
--skip-forms       - –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Ñ–æ—Ä–º
--output-dir       - –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
"""

import os
import sys
import argparse
import subprocess
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤ Windows
if sys.platform == "win32":
    import locale
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –∫–æ–Ω—Å–æ–ª–∏
    os.system('chcp 65001 > nul')
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    try:
        locale.setlocale(locale.LC_ALL, 'Russian_Russia.1251')
    except:
        try:
            locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
        except:
            pass
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è UTF-8
    os.environ['PYTHONIOENCODING'] = 'utf-8'

def run_command(cmd, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    print(f"\n{'='*60}")
    print(f"–ó–∞–ø—É—Å–∫: {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    print(f"{'='*60}")
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, encoding='utf-8', errors='replace')
        
        if result.stdout:
            print("–í—ã–≤–æ–¥:")
            print(result.stdout)
        
        if result.stderr:
            print("–û—à–∏–±–∫–∏:")
            print(result.stderr)
        
        if result.returncode == 0:
            print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: {result.returncode})")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {description}: {e}")
        return False

def main():
    parser = argparse.ArgumentParser(
        description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ 1–°",
        formatter_class=argparse.RawTextHelpFormatter
    )
    
    parser.add_argument(
        "--report-path", 
        required=True,
        help="–ü—É—Ç—å –∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É –æ—Ç—á–µ—Ç–∞ –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    )
    
    parser.add_argument(
        "--conf-dir", 
        required=True,
        help="–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (conf_files)"
    )
    
    parser.add_argument(
        "--output-dir", 
        default="metadata_contracts",
        help="–ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: metadata_contracts)"
    )
    
    parser.add_argument(
        "--skip-metadata",
        action="store_true",
        help="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö"
    )
    
    parser.add_argument(
        "--skip-forms",
        action="store_true", 
        help="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Ñ–æ—Ä–º"
    )
    
    args = parser.parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(args.report_path):
        print(f"‚ùå –§–∞–π–ª –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {args.report_path}")
        return 1
    
    if not os.path.exists(args.conf_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {args.conf_dir}")
        return 1
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö 1–°")
    print(f"üìÑ –û—Ç—á–µ—Ç: {args.report_path}")
    print(f"üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {args.conf_dir}")
    print(f"üìÇ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {args.output_dir}")
    
    success_count = 0
    total_count = 0
    
    # 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    if not args.skip_metadata:
        total_count += 1
        cmd = [
            sys.executable, "generate_contracts.py",
            args.report_path,
            "--output-dir", args.output_dir
        ]
        
        if run_command(cmd, "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö"):
            success_count += 1
    else:
        print("\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö")
    
    # 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Ñ–æ—Ä–º
    if not args.skip_forms:
        total_count += 1
        forms_output_dir = os.path.join(args.output_dir, "–§–æ—Ä–º—ã")
        
        cmd = [
            sys.executable, "form_contracts_generator.py",
            "--conf-dir", args.conf_dir,
            "--output-dir", forms_output_dir
        ]
        
        if run_command(cmd, "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Ñ–æ—Ä–º"):
            success_count += 1
    else:
        print("\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Ñ–æ—Ä–º")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'='*60}")
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print(f"{'='*60}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {success_count}/{total_count}")
    
    if success_count == total_count:
        print("üéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÇ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {args.output_dir}")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 